Algoritmo Principal_main
	//Definicion de variables y carga de datos.
	Definir opcionMenu Como Entero
	definir Dni,opcionDia,opcionHorario,opcionVacuna,contadorPacientes Como Entero
	Definir edad como real
	Definir tipoOrden Como Caracter
	Definir aux como Cadena
	Definir indiceMinimo como Entero
	Definir vacunaElegida,nombre,DiaElegido,HorarioElegido,vacuna,salida,turnos Como Cadena
	Dimension datosPacientes[100,6],vacuna[6],horario[7],dia[5],turnos[5,8]
	contadorPacientes = 0
	cargaDatos(vacuna,turnos)
	Definir contadorVacunas Como Entero
	Dimension contadorVacunas[6]
	Para i<-0 hasta 5 Hacer
		contadorVacunas[i]= 0;
	Fin Para
	Escribir"====================================="
	//Menu de Bienvenida.
	Escribir "Bienvenido al vacunatorio UTN"
	Repetir
		Escribir"====================================="
		Escribir "Menu principal de opciones:"
		Escribir "1-Reservar turno"
		Escribir "2-Buscar paciente"
		Escribir "3-Ver agenda vacunatorio"
		Escribir "4-Ordenar y mostrar listas de pacientes"
		Escribir "5-Listados"
		leer opcionMenu
		Escribir"====================================="
		Segun opcionMenu
			1:
				turnoReserva(turnos,vacuna,datosPacientes,opcionDia,opcionHorario,opcionVacuna,contadorPacientes,contadorVacunas)//penar opcion copmo una sola
			2:
				busquedaPorDni(datosPacientes,contadorPaciente)
			3:
				agendaDeDisponibilidad(turnos)
			4: 
				ordenarPacientes(aux,tipoOrden,indiceMinimo,datosPacientes, contadorPacientes,vacuna)
			5:  
				listados(contadorVacunas, turnos, vacuna)
			De Otro Modo:
				Escribir"Opción inválida"
		FinSegun
		Repetir
			Escribir "Ingrese /SALIR/ si desea salir del sistema o /SEGUIR/ si desea volver al menú principal"
			Leer salida
			salida =  Mayusculas(salida)
		Mientras Que salida <> "SALIR" y salida <> "SEGUIR"
	Mientras Que salida <> "SALIR" O opcionMenu > 5 O opcionMenu < 1///////ver esto
	
	Escribir"Saliendo del sistema"
FinAlgoritmo

///funcion1-turnoreserva.
SubProceso turnoReserva(turnos,vacuna,datosPacientes,opcionDia,opcionHorario,opcionVacuna,contadorPacientes Por Referencia,contadorVacunas Por Referencia)
	Definir disponibilidadVacuna Como Logico
	disponibiidadVacuna = falso
	Repetir
		//agenda de disponibilidad
		agendaDeDisponibilidad(turnos)
		
		//Seleccion de turno.
		Escribir"Ingrese el día y horario que desea guardar(ejemplo 4 7) "
		leer opcionDia, opcionHorario
		Si opcionDia < 1 o opcionDia > 5 o opcionHorario < 1 o opcionHorario > 7 Entonces///
			Escribir"Ingreso una opción incorrecta, por favor vuelva a ingresar"
		FinSi
		Si turnos[opcionDia - 1,opcionHorario] == "OCUPADO" Entonces
			Escribir "Ese dia no se encuentra disponible,vuelva a ingresar otro"
		FinSi
	Mientras Que (opcionDia < 1 O opcionDia > 5 O opcionHorario < 1 O opcionHorario > 7) O turnos[opcionDia -1,opcionHorario] = "OCUPADO"
	Escribir "==============================================="
	///Menu de opciones vacuna.
	Repetir
		Escribir"Opciones Vacuna"
		Para i = 0 Hasta 5 con paso 1 Hacer
			Escribir i + 1, " ", vacuna[i]
		FinPara
		Escribir "Seleccione una opción"
		Leer opcionVacuna
		Si contadorVacunas[opcionVacuna - 1] < 10 Entonces
			contadorVacunas[opcionVacuna - 1] = contadorVacunas[opcionVacuna - 1] + 1
			disponibilidadVacuna = Verdadero
		SiNo
			Escribir"No contamos con más stock de esta vacuna"
		FinSi
		Si opcionVacuna < 1 o opcionVacuna > 6 Entonces
			Escribir"ingreso una opción no válida"
		FinSi
	Mientras Que (opcionVacuna <= 0 O opcionVacuna >= 7)
	Escribir"====================================="
	Si disponibilidadVacuna Entonces
		Escribir"Ingrese su nombre:"
		leer datosPacientes[contadorPacientes,0]
		Repetir
			Escribir"Ingrese su dni:"
			leer datosPacientes[contadorPacientes,1]
		Mientras Que Longitud(datosPacientes[contadorPacientes,1]) < 6 o longitud(datosPacientes[contadorPacientes,1]) > 8
		Escribir"Edad:"
		leer datosPacientes[contadorPacientes,2]
		datosPacientes[contadorPacientes,3] = vacuna[opcionVacuna - 1]
		datosPacientes[contadorPacientes,4] = turnos[opcionDia - 1,0]
		datosPacientes[contadorPacientes,5] = turnos[opcionDia - 1,opcionHorario]
		Escribir"====================================="
		//Resumen.
		Escribir "Resumen...."
		Escribir "Nombre y Apellido: ",datosPacientes[contadorPacientes,0]
		Escribir "Dni: ",datosPacientes[contadorPacientes,1]
		Escribir "Edad: ",datosPacientes[contadorPacientes,2]
		Escribir "Vacuna a aplicar:",datosPacientes[contadorPacientes,3]
		Escribir "DÍa turno: ",datosPacientes[contadorPacientes,4]
		Escribir "Horario Turno: ",datosPacientes[contadorPacientes,5]
		turnos[opcionDia -1,opcionHorario] = "OCUPADO"
		contadorPacientes = contadorPacientes + 1	
		Escribir"====================================="
	Fin Si
	
FinSubProceso



///funcion de busqueda por dni
SubProceso busquedaPorDni(datosPacientes,contadorPaciente)
	Definir encontrado Como Logico
	Definir posicionEncontrado Como Entero
	encontrado = falso
	Definir numDocumento Como cadena
	Repetir
		Escribir "Ingrese el número de documento del paciente"
		leer numDocumento
	Mientras Que Longitud(numDocumento) < 6 o longitud(numDocumento) > 8
	Para i = 0 hasta contadorPaciente con paso 1 Hacer
		Si datosPacientes[i,1] == numDocumento Entonces
			posicionEncontrado = i
			encontrado = verdadero
	    FinSi
	FinPara
	Si encontrado = Verdadero Entonces
		Escribir "Nombre y Apellido: ",datosPacientes[posicionEncontrado,0]
		Escribir "Dni: ",datosPacientes[posicionEncontrado,1]
		Escribir "Edad: ",datosPacientes[posicionEncontrado,2]
		Escribir "Vacuna a aplicar:",datosPacientes[posicionEncontrado,3]
		Escribir "Día turno: ",datosPacientes[posicionEncontrado,4]
		Escribir "Horario Turno: ",datosPacientes[poscicionEncontrado,5]
	SiNo
		Escribir"Número de documento no encontrado"
	FinSi
	Escribir"====================================="
FinSubProceso


///funcion de agenda de disponibilidad
SubProceso agendaDeDisponibilidad(turnos)
	Escribir"Agenda disponible del vacunatorio"
	Para i = 0 Hasta 4 con paso 1 Hacer
		Escribir sin saltar,i + 1,"-",turnos[i,0] " "
		Para x = 1 Hasta 7 con paso 1 Hacer
			Escribir Sin Saltar x,".",turnos[i,x] " - "
		FinPara
		Escribir""
	FinPara
	Escribir"====================================="
FinSubProceso

///funcion ordenar

SubProceso ordenarPacientes(aux,tipoOrden,indiceMinimo,datosPacientes,contadorPacientes Por Referencia,vacuna)
	Repetir
		Escribir "Ingrese /a/ si desea ordenar por edad o /b/ si desea ordenar por vacuna"
		leer tipoOrden
		Si tipoOrden <> "a" y tipoOrden <> "b" Entonces
			Escribir "Ingreso una opción no existente"
		FinSi
	Mientras Que tipoOrden <> "a" y tipoOrden <> "b"
	Escribir"====================================="
	Si tipoOrden == "a" Entonces
		Para i = 0 Hasta contadorPacientes - 2
			indiceMinimo = i
			Para j = i + 1 Hasta contadorPacientes -1
				Si ConvertirANumero(datosPacientes[j, 2]) < ConvertirANumero(datosPacientes[indiceMinimo, 2]) Entonces
					indiceMinimo = j
				FinSi
			FinPara
			Para x = 0 Hasta 5 con paso 1 Hacer
				aux = datosPacientes[i, x]
				datosPacientes[i, x] = datosPacientes[indiceMinimo, x]
				datosPacientes[indiceMinimo, x] = aux
			FinPara
		FinPara
		Para k = 0 hasta contadorPacientes -1 Hacer
			Escribir Sin Saltar "Nombre Paciente: ",datosPacientes[k,0]," - "
			Escribir Sin Saltar "DNI: ",datosPacientes[k,1]," - "
			Escribir Sin Saltar "Edad: ",datosPacientes[k,2]," - "
			Escribir Sin Saltar "Vacuna a aplicar: ",datosPacientes[k,3]," - "
			Escribir Sin saltar "Dia turno: ",datosPacientes[k,4], " - "
			Escribir Sin saltar "Horario Turno: ",datosPacientes[k,5]
			Escribir ""
		FinPara
		
	SiNo
		Si tipoOrden == "b" Entonces
			Para i = 0 hasta 5 Hacer
				Escribir vacuna[i] ":"
				Para x = 0 Hasta contadorPacientes Hacer
					Si datosPacientes[x,3] == vacuna[i] 
						
						Escribir Sin Saltar "Nombre Paciente: ",datosPacientes[x,0]," - "
						Escribir Sin Saltar "DNI: ",datosPacientes[x,1]," - "
						Escribir Sin Saltar "Edad: ",datosPacientes[x,2]," - "
						Escribir Sin Saltar "Vacuna a aplicar: ",datosPacientes[x,3]," - "
						Escribir Sin saltar "Dia turno: ",datosPacientes[x,4], " - "
						Escribir Sin saltar "Horario Turno: ",datospacientes[x,5]
						Escribir ""
						
					FinSi
				FinPara
			FinPara
		FinSi
	FinSi
	Escribir"====================================="
FinSubproceso
///funcion listados
SubProceso listados(contadorVacunas, turnos, vacuna)
	Definir contadorTurnos Como Entero
	Definir opcionListado Como Entero
    Repetir
        Escribir "Menú de Listados:"
        Escribir "1. Cantidad de turnos otorgados por día"
        Escribir "2. Cantidad de vacunas a aplicar por vacuna"
        Escribir "3. Volver al menú principal"
        Leer opcionListado
        Escribir "================================================"
		
        Segun opcionListado
            1:
                Para i = 0 Hasta 4 Hacer
                    contadorTurnos = 0
                    Para j = 1 Hasta 7 Hacer
                        Si turnos[i, j] == "OCUPADO" Entonces
                            contadorTurnos = contadorTurnos + 1
                        FinSi
                    FinPara
                    Escribir "Día ", turnos[i, 0], ": Turnos otorgados - ", contadorTurnos
                FinPara
				
            2:
                Para i = 0 Hasta 5 Hacer
                    contadorVacuna = contadorVacunas[i]
                    Escribir "Vacuna ", vacuna[i], ": Cantidad a aplicar - ", contadorVacuna
                FinPara
				
            3:
                // Salir del menú de listados
            OtroCaso:
                Escribir "Opción no válida"
        FinSegun
		
    Mientras Que opcionListado <> 3
FinSubProceso

funcion  validacion <- validacionDatos(varCadena)
    Definir validacion como logico
    validacion = falso
    Si varCadena = "" Entonces
        validacion = Verdadero
    FinSi
FinFuncion

SubProceso cargaDatos(vacuna,turnos)
	
	//carga vacunas.
	vacuna[0] = "Neumococo Conjugada"
	vacuna[1] = "Poliomelitis"
	vacuna[2] = "Quintuple"
	vacuna[3] = "Rotavirus"
	vacuna[4] = "Mengicoco"
	vacuna[5] = "Triple Viral"
	
	//carga de matriz
	turnos[0,0] = "Lunes"
	turnos[0,1]	= "8:00"
	turnos[0,2] = "8:30"
	turnos[0,3]	= "9:00"
	turnos[0,4]	= "9:30"
	turnos[0,5]	= "10:00"
	turnos[0,6]	= "10:30"
	turnos[0,7] = "11:00"
	
	turnos[1,0] = "Martes"
	turnos[1,1]	= "8:00"
	turnos[1,2] = "8:30"
	turnos[1,3]	= "9:00"
	turnos[1,4]	= "9:30"
	turnos[1,5]	= "10:00"
	turnos[1,6]	= "10:30"
	turnos[1,7] = "11:00"
	
	turnos[2,0] = "Miercoles"
	turnos[2,1]	= "8:00"
	turnos[2,2] = "8:30"
	turnos[2,3]	= "9:00"
	turnos[2,4]	= "9:30"
	turnos[2,5]	= "10:00"
	turnos[2,6]	= "10:30"
	turnos[2,7] = "11:00"
	
	turnos[3,0] = "Jueves"
	turnos[3,1]	= "8:00"
	turnos[3,2] = "8:30"
	turnos[3,3]	= "9:00"
	turnos[3,4]	= "9:30"
	turnos[3,5]	= "10:00"
	turnos[3,6]	= "10:30"
	turnos[3,7] = "11:00"
	
	turnos[4,0] = "Viernes"
	turnos[4,1]	= "8:00"
	turnos[4,2] = "8:30"
	turnos[4,3]	= "9:00"
	turnos[4,4]	= "9:30"
	turnos[4,5]	= "10:00"
	turnos[4,6]	= "10:30"
	turnos[4,7] = "11:00"
FinSubProceso
